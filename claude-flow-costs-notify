#!/bin/bash
# Claude-Flow costs notification wrapper

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Check for command
if [ "$#" -eq 0 ]; then
    echo "Usage: claude-flow-costs-notify <command> [options]"
    echo ""
    echo "Commands:"
    echo "  setup      - Set up automated Slack notifications"
    echo "  daily      - Send daily cost summary to Slack"
    echo "  weekly     - Send weekly cost analysis to Slack"
    echo "  efficiency - Send efficiency report to Slack"
    echo "  budget     - Check budget limits and send alerts"
    echo "  test       - Test all notification types"
    echo "  scheduler  - Run continuous notification scheduler"
    echo ""
    echo "Options:"
    echo "  --budget-limit <amount>   - Set budget limit for alerts"
    echo "  --budget-period <period>  - Set budget period (daily/weekly/monthly)"
    echo ""
    exit 1
fi

COMMAND=$1
shift

case $COMMAND in
    setup)
        bash "$SCRIPT_DIR/scripts/setup_claude_cost_notifications.sh"
        ;;

    daily|weekly|efficiency)
        python3 "$SCRIPT_DIR/scripts/claude_cost_slack_notifier.py" "$COMMAND" "$@"
        ;;

    budget)
        # Default budget if not specified
        if [ "$#" -eq 0 ]; then
            python3 "$SCRIPT_DIR/scripts/claude_cost_slack_notifier.py" budget --budget-limit 5.00 --budget-period daily
        else
            python3 "$SCRIPT_DIR/scripts/claude_cost_slack_notifier.py" budget "$@"
        fi
        ;;

    test)
        echo "ðŸ§ª Testing all Claude cost notifications..."
        echo ""

        # Test each notification type
        for type in daily weekly efficiency; do
            echo "Testing $type notification..."
            python3 "$SCRIPT_DIR/scripts/claude_cost_slack_notifier.py" "$type"
            sleep 2  # Avoid rate limiting
        done

        echo ""
        echo "Testing budget alert..."
        python3 "$SCRIPT_DIR/scripts/claude_cost_slack_notifier.py" budget --budget-limit 0.01 --budget-period daily

        echo ""
        echo "âœ… Test complete!"
        ;;

    scheduler)
        # Run the continuous scheduler
        python3 "$SCRIPT_DIR/scripts/claude_cost_scheduler.py" run "$@"
        ;;

    *)
        echo "Unknown command: $COMMAND"
        echo "Run 'claude-flow-costs-notify' for usage information"
        exit 1
        ;;
esac
