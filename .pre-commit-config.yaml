# Pre-commit hooks for KindleMint Engine
# Run: pre-commit install
# Manual run: pre-commit run --all-files

repos:
  # General file fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python specific
  - repo: https://github.com/psf/black
    rev: 24.1.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=100']

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=100']

  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-r', 'scripts/', '-ll']
        exclude: 'tests/.*'

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']
        additional_dependencies:
          - types-requests
          - types-PyYAML
        exclude: '^tests/'

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: '^tests/'

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # Custom checks for KindleMint
  - repo: local
    hooks:
      - id: check-no-test-content
        name: Check for test content in production
        entry: 'grep -i -E "(test|lorem ipsum|placeholder|todo|fixme)" --include="*.json" --include="*.py" -r scripts/ || true'
        language: system
        pass_filenames: false
      
      - id: check-api-keys
        name: Check for exposed API keys
        entry: 'grep -E "(OPENAI_API_KEY|GEMINI_API_KEY|SLACK_WEBHOOK).*=.*[\"'\''][a-zA-Z0-9]{20,}" --include="*.py" -r scripts/ || true'
        language: system
        pass_filenames: false