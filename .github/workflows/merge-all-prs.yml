name: Emergency Merge All PRs

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes

jobs:
  merge-all-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      statuses: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install MCP GitHub Server
        run: |
          npm install -g @modelcontextprotocol/server-github
          npm install -g @anthropic-ai/sdk

      - name: Get All Open PRs
        id: get-prs
        run: |
          echo "Getting all open PRs"
          
          # Get list of open PRs
          gh pr list --state open --json number,title,headRefName,baseRefName > open-prs.json
          
          # Count PRs
          PR_COUNT=$(jq length open-prs.json)
          echo "Found $PR_COUNT open PRs"
          echo "pr_count=$PR_COUNT" >> $GITHUB_OUTPUT

      - name: Merge All PRs
        if: steps.get-prs.outputs.pr_count != '0'
        run: |
          echo "Merging all open PRs"
          
          # Read each PR and merge it
          jq -r '.[] | @base64' open-prs.json | while read pr; do
            PR_DATA=$(echo $pr | base64 --decode)
            PR_NUMBER=$(echo $PR_DATA | jq -r '.number')
            PR_TITLE=$(echo $PR_DATA | jq -r '.title')
            
            echo "Processing PR #$PR_NUMBER: $PR_TITLE"
            
            # Auto-approve the PR
            gh pr review $PR_NUMBER --approve --body "âœ… Auto-approved by MCP bot - Emergency merge"
            
            # Enable auto-merge
            gh pr merge $PR_NUMBER --auto --squash
            
            echo "PR #$PR_NUMBER queued for merge"
          done

      - name: Force Merge if Needed
        if: steps.get-prs.outputs.pr_count != '0'
        run: |
          echo "Force merging remaining PRs"
          
          # Force merge any PRs that didn't auto-merge
          jq -r '.[] | @base64' open-prs.json | while read pr; do
            PR_DATA=$(echo $pr | base64 --decode)
            PR_NUMBER=$(echo $PR_DATA | jq -r '.number')
            PR_TITLE=$(echo $PR_DATA | jq -r '.title')
            
            echo "Force merging PR #$PR_NUMBER: $PR_TITLE"
            
            # Force merge
            gh pr merge $PR_NUMBER --merge --squash --delete-branch
            
            echo "PR #$PR_NUMBER force merged"
          done

      - name: Report Results
        if: always()
        run: |
          if [ "${{ steps.get-prs.outputs.pr_count }}" == "0" ]; then
            echo "No open PRs found"
          else
            echo "Processed ${{ steps.get-prs.outputs.pr_count }} PRs"
            echo "All PRs have been queued for merge or force merged"
          fi 