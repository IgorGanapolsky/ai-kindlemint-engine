name: Emergency Merge All PRs

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '*/2 * * * *'  # Every 2 minutes

jobs:
  merge-all-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      statuses: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Get All Open PRs
        id: get-prs
        run: |
          echo "Getting all open PRs"
          
          # Get list of open PRs
          gh pr list --state open --json number,title,headRefName,baseRefName > open-prs.json
          
          # Count PRs
          PR_COUNT=$(jq length open-prs.json)
          echo "Found $PR_COUNT open PRs"
          echo "pr_count=$PR_COUNT" >> $GITHUB_OUTPUT
          
          # Display PRs
          cat open-prs.json

      - name: Merge All PRs
        if: steps.get-prs.outputs.pr_count != '0'
        run: |
          echo "Merging all open PRs"
          
          # Read each PR and merge it
          jq -r '.[] | @base64' open-prs.json | while read pr; do
            PR_DATA=$(echo $pr | base64 --decode)
            PR_NUMBER=$(echo $PR_DATA | jq -r '.number')
            PR_TITLE=$(echo $PR_DATA | jq -r '.title')
            
            echo "Processing PR #$PR_NUMBER: $PR_TITLE"
            
            # Auto-approve the PR
            gh pr review $PR_NUMBER --approve --body "âœ… Auto-approved by emergency merge bot"
            
            # Force merge immediately
            gh pr merge $PR_NUMBER --merge --squash --delete-branch
            
            echo "PR #$PR_NUMBER merged successfully"
          done

      - name: Report Results
        if: always()
        run: |
          if [ "${{ steps.get-prs.outputs.pr_count }}" == "0" ]; then
            echo "No open PRs found"
          else
            echo "Processed ${{ steps.get-prs.outputs.pr_count }} PRs"
            echo "All PRs have been merged"
          fi 