name: Update Agent Dashboard

on:
  schedule:
    # Update every 5 minutes during active hours (9 AM - 11 PM EST)
    - cron: '*/5 9-23 * * *'
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-dashboard:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dateutil
        
    - name: Generate Agent Status
      run: |
        cd scripts
        python generate_status_badges.py > ../agent_dashboard_update.log 2>&1
        
    - name: Update README with Agent Dashboard
      run: |
        python scripts/update_readme_dashboard.py
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md agent_status.json
        git commit -m "ðŸ¤– Auto-update Agent Orchestration Dashboard
        
        - Updated agent status badges
        - Refreshed orchestration metrics
        - Auto-generated at $(date -u)
        
        ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>"
        git push
        
    - name: Create status summary
      run: |
        echo "## ðŸ¤– Agent Dashboard Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Time:** $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- **Changed:** ${{ steps.verify-changed-files.outputs.changed }}" >> $GITHUB_STEP_SUMMARY
        if [ -f agent_status.json ]; then
          echo "- **Status File:** Created successfully" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f agent_dashboard_update.log ]; then
          echo "### Generation Log:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat agent_dashboard_update.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi