name: Weekly Business Expansion

on:
  schedule:
    # Every Sunday at 10 AM UTC - Plan new series
    - cron: '0 10 * * 0'
    # Every Wednesday at 2 PM UTC - Analyze performance
    - cron: '0 14 * * 3'
    
  workflow_dispatch:
    inputs:
      expansion_type:
        description: 'Type of expansion'
        required: true
        default: 'new_series'
        type: choice
        options:
          - new_series
          - market_analysis
          - competitor_research
          - niche_exploration

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  weekly-expansion:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repository
        uses: actions/checkout@v4
        
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: üì¶ Install Dependencies
        run: |
          pip install --upgrade pip
          pip install openai requests python-dotenv beautifulsoup4
          
      - name: üéØ Weekly Business Expansion
        run: |
          python -c "
          import os
          import json
          from datetime import datetime, timedelta
          import requests
          
          expansion_type = '${{ github.event.inputs.expansion_type || \"auto\" }}'
          current_day = datetime.now().strftime('%A')
          
          print(f'üéØ Starting Weekly Expansion: {expansion_type}')
          
          if expansion_type == 'auto':
              expansion_type = 'new_series' if current_day == 'Sunday' else 'market_analysis'
          
          expansion_results = {
              'date': datetime.now().isoformat(),
              'expansion_type': expansion_type,
              'week_number': datetime.now().isocalendar()[1]
          }
          
          if expansion_type == 'new_series':
              # Plan new book series
              expansion_results['new_series_ideas'] = [
                  {
                      'title': 'Adult Coloring Mandala Masters',
                      'target_audience': 'Adults 25-65 seeking relaxation',
                      'market_size': 'High',
                      'competition': 'Medium',
                      'estimated_revenue': '$150-300/month',
                      'volumes_planned': 10
                  },
                  {
                      'title': 'Brain Training Sudoku Collection',
                      'target_audience': 'Seniors 55+ cognitive health',
                      'market_size': 'Medium-High',
                      'competition': 'High',
                      'estimated_revenue': '$100-200/month',
                      'volumes_planned': 8
                  },
                  {
                      'title': 'Large Print Word Search Adventures',
                      'target_audience': 'Seniors 60+ puzzle enthusiasts',
                      'market_size': 'Medium',
                      'competition': 'Medium',
                      'estimated_revenue': '$80-150/month',
                      'volumes_planned': 6
                  }
              ]
              
          elif expansion_type == 'market_analysis':
              # Analyze current performance
              expansion_results['performance_analysis'] = {
                  'current_series_performance': {
                      'Large Print Crossword Masters': {
                          'volumes_published': 5,
                          'estimated_monthly_revenue': '$239.25',
                          'market_penetration': '0.02%',
                          'growth_potential': 'High'
                      }
                  },
                  'market_trends': [
                      'Increasing demand for senior-friendly content',
                      'Large print books showing 15% YoY growth',
                      'Digital detox driving print book popularity'
                  ],
                  'expansion_recommendations': [
                      'Launch coloring book series by next month',
                      'Experiment with seasonal themed collections',
                      'Consider international markets (UK, Canada)'
                  ]
              }
          
          # Save expansion plan
          os.makedirs('output/expansion_plans', exist_ok=True)
          filename = f'weekly_expansion_{datetime.now().strftime(\"%Y_%m_%d\")}_{expansion_type}.json'
          with open(f'output/expansion_plans/{filename}', 'w') as f:
              json.dump(expansion_results, f, indent=2)
          
          # Send to Slack
          webhook_url = os.getenv('SLACK_WEBHOOK_URL')
          if webhook_url:
              if expansion_type == 'new_series':
                  message_text = f'üöÄ Weekly Expansion: {len(expansion_results[\"new_series_ideas\"])} New Series Ideas Generated!'
                  details = '\\\\n'.join([f'‚Ä¢ {idea[\"title\"]} - Est. Revenue: {idea[\"estimated_revenue\"]}' for idea in expansion_results['new_series_ideas']])
              else:
                  message_text = f'üìä Weekly Market Analysis Complete!'
                  details = f'Current Revenue: $239.25/month\\\\nGrowth Potential: High\\\\nNext Actions: Launch coloring books'
              
              message = {
                  'text': message_text,
                  'blocks': [
                      {
                          'type': 'header',
                          'text': {'type': 'plain_text', 'text': message_text}
                      },
                      {
                          'type': 'section',
                          'text': {'type': 'mrkdwn', 'text': details}
                      },
                      {
                          'type': 'context',
                          'elements': [
                              {'type': 'mrkdwn', 'text': f'ü§ñ KindleMint Empire Expansion - Week {expansion_results[\"week_number\"]}'}
                          ]
                      }
                  ]
              }
              requests.post(webhook_url, json=message)
              print('üìß Expansion plan sent to Slack!')
          
          print(f'‚úÖ Weekly expansion planning completed: {expansion_type}')
          "
          
      - name: üíæ Archive Expansion Plans
        uses: actions/upload-artifact@v3
        with:
          name: expansion-plans-${{ github.run_number }}
          path: output/expansion_plans/
          retention-days: 90