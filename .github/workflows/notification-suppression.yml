name: Email Notification Suppression

on:
  issues:
    types: [opened, closed, reopened]
  pull_request:
    types: [opened, closed, reopened, synchronize]
  issue_comment:
    types: [created]

jobs:
  suppress-routine-notifications:
    runs-on: ubuntu-latest
    if: |
      (github.actor == 'seer-by-sentry[bot]' || 
       github.actor == 'coderabbitai[bot]' ||
       github.actor == 'pixeebot[bot]' ||
       github.actor == 'github-actions[bot]') &&
      (contains(github.event.comment.body, 'Suggested change') ||
       contains(github.event.comment.body, 'import random') ||
       contains(github.event.comment.body, 'unnecessary here'))
    
    steps:
    - name: Suppress routine AI notifications
      uses: actions/github-script@v7
      with:
        script: |
          console.log('ðŸ”‡ Suppressing routine AI suggestion notification');
          
          // Add a label to indicate this is handled automatically
          if (context.payload.pull_request) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['auto-processed', 'ai-suggestions']
            });
          }
          
          // Log that this was handled automatically
          console.log('âœ… Added auto-processed label - no email notification needed');

  ceo-only-critical-alerts:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.comment.body, 'CRITICAL') ||
      contains(github.event.comment.body, 'SECURITY') ||
      contains(github.event.comment.body, 'BREAKING') ||
      github.event.action == 'closed' && github.event.pull_request.merged == true
    
    steps:
    - name: Send CEO notification for critical issues only
      uses: actions/github-script@v7
      with:
        script: |
          console.log('ðŸš¨ CRITICAL issue detected - CEO notification warranted');
          
          // Only these types of issues should reach the CEO:
          // - Security vulnerabilities
          // - Breaking changes
          // - Critical system failures
          // - Successful PR merges (for awareness)
          
          const issueType = context.payload.comment?.body.includes('SECURITY') ? 'SECURITY' :
                           context.payload.comment?.body.includes('BREAKING') ? 'BREAKING' :
                           context.payload.comment?.body.includes('CRITICAL') ? 'CRITICAL' :
                           'MERGE_SUCCESS';
          
          console.log(`âœ… ${issueType} notification appropriate for CEO`);
