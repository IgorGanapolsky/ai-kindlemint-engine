name: Issue Cleanup Orchestrator

on:
  # Run hourly to catch new spam issues quickly
  schedule:
    - cron: '0 * * * *'  # Every hour
  # Also run when issues are created
  issues:
    types: [opened]
  # Manual trigger for testing
  workflow_dispatch:
  # Run after other workflows that might create issues
  workflow_run:
    workflows: ["AI Development Team - Intelligent PR Review & Merge System", "Staged PR Orchestrator - Enterprise Security Model"]
    types: [completed]

jobs:
  cleanup-duplicate-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || true
    
    - name: Run Issue Cleanup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "ðŸ§¹ Running automated issue cleanup..."
        python scripts/automated_issue_cleanup.py
    
    - name: Generate Cleanup Report
      if: always()
      run: |
        echo "## ðŸ¤– Issue Cleanup Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Automated cleanup completed at $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This workflow runs hourly to prevent issue spam from automation systems." >> $GITHUB_STEP_SUMMARY