<<<<<<< HEAD
name: Health Issue Auto-Closer (Legacy)

on:
  # Disabled - replaced by enhanced auto-closer
  # schedule:
  #   - cron: '*/15 * * * *'  # Every 15 minutes
=======
name: Health Issue Auto-Closer

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
>>>>>>> origin/main
  workflow_dispatch:

permissions:
  issues: write
  actions: read

jobs:
  auto-close-health-issues:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check current health status
        id: health_check
        run: |
          # Check for recent workflow failures
          FAILED_WORKFLOWS=$(gh run list --limit 50 --json status,name,conclusion,createdAt | \
            jq '[.[] | select(.conclusion == "failure" and (.createdAt | fromdateiso8601) > (now - 3600))] | length')
          
          echo "failed_workflows=$FAILED_WORKFLOWS" >> $GITHUB_OUTPUT
          
          if [ "$FAILED_WORKFLOWS" -lt 3 ]; then
            echo "health_status=healthy" >> $GITHUB_OUTPUT
            echo "‚úÖ System is healthy: only $FAILED_WORKFLOWS failures in last hour"
          else
            echo "health_status=unhealthy" >> $GITHUB_OUTPUT  
            echo "‚ö†Ô∏è System is unhealthy: $FAILED_WORKFLOWS failures in last hour"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Auto-close healthy issues
        if: steps.health_check.outputs.health_status == 'healthy'
        run: |
          # Find open orchestration health issues
          OPEN_HEALTH_ISSUES=$(gh issue list --label "orchestration-health" --state open --json number,title,createdAt)
          
          echo "$OPEN_HEALTH_ISSUES" | jq -r '.[] | "\(.number) \(.title)"' | while read issue_num title; do
            if [ ! -z "$issue_num" ]; then
              echo "üè• Closing healthy issue #$issue_num"
              
              gh issue close $issue_num --comment "## ‚úÖ System Health Restored
              
              **Auto-Resolution Report:**
              - Current failed workflows (last hour): **${{ steps.health_check.outputs.failed_workflows }}**
              - Health status: **HEALTHY**
              - Issues detected in this report have been resolved
              
              ### Actions Taken:
              - Monitored system recovery
              - Verified workflow stability
              - Confirmed orchestration functionality
              
              This issue is being automatically closed as the system has returned to a healthy state.
              
              ---
              ü§ñ Auto-closed by Health Issue Auto-Closer"
              
              echo "‚úÖ Closed issue #$issue_num"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update critical alerts
        if: steps.health_check.outputs.health_status == 'healthy'
        run: |
          # Find open critical orchestration issues
          CRITICAL_ISSUES=$(gh issue list --label "critical" --label "orchestration-failure" --state open --json number)
          
          if [ "$(echo "$CRITICAL_ISSUES" | jq length)" -gt 0 ]; then
            echo "$CRITICAL_ISSUES" | jq -r '.[].number' | while read issue_num; do
              gh issue close $issue_num --comment "üéØ **Critical Alert Resolved**
              
              The orchestration system has recovered and is now operating normally.
              - Failed workflows reduced to acceptable levels
              - System health restored
              - Monitoring continues
              
              ü§ñ Auto-resolved by Health Monitor"
            done
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Report status
        run: |
          echo "üè• Health Issue Auto-Closer completed"
          echo "System status: ${{ steps.health_check.outputs.health_status }}"
          echo "Failed workflows (last hour): ${{ steps.health_check.outputs.failed_workflows }}"