name: Code Hygiene Check - Always On

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main, develop, 'feat/*', 'fix/*', 'hotfix/*']

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  hygiene-check:
    name: Code Hygiene Orchestrator
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install PyGithub openai anthropic pyyaml requests
          
      - name: Run Hygiene Orchestrator
        id: hygiene
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üßπ Running Code Hygiene Orchestrator..."
          
          # Run hygiene analysis
          python src/kindlemint/agents/code_hygiene_orchestrator.py \
            --mode=check \
            --output=json \
            > hygiene_report.json || echo "Hygiene check completed with warnings"
          
          # Extract score
          HYGIENE_SCORE=$(python -c "
          import json
          try:
              with open('hygiene_report.json', 'r') as f:
                  data = json.load(f)
              score = data.get('metrics', {}).get('hygiene_score', 75)
              print(int(score))
          except:
              print(75)
          ")
          
          echo "hygiene_score=$HYGIENE_SCORE" >> $GITHUB_OUTPUT
          echo "Hygiene Score: $HYGIENE_SCORE/100"
          
          # Create summary
          echo "## üßπ Code Hygiene Report" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Score: $HYGIENE_SCORE/100**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$HYGIENE_SCORE" -ge 90 ]; then
            echo "‚úÖ **Excellent** - Code meets high hygiene standards" >> $GITHUB_STEP_SUMMARY
          elif [ "$HYGIENE_SCORE" -ge 80 ]; then
            echo "‚úÖ **Good** - Code meets hygiene standards" >> $GITHUB_STEP_SUMMARY
          elif [ "$HYGIENE_SCORE" -ge 70 ]; then
            echo "‚ö†Ô∏è **Fair** - Some hygiene improvements recommended" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Needs Improvement** - Hygiene fixes required" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const score = '${{ steps.hygiene.outputs.hygiene_score }}';
            
            let status = '';
            let emoji = '';
            
            if (score >= 90) {
              status = 'Excellent';
              emoji = '‚úÖ';
            } else if (score >= 80) {
              status = 'Good';
              emoji = '‚úÖ';
            } else if (score >= 70) {
              status = 'Fair';
              emoji = '‚ö†Ô∏è';
            } else {
              status = 'Needs Improvement';
              emoji = '‚ùå';
            }
            
            const comment = `## üßπ Code Hygiene Check
            
            ${emoji} **${status}** - Score: ${score}/100
            
            ${score >= 80 ? 
              '‚úÖ Code meets hygiene standards for auto-merge consideration.' : 
              '‚ö†Ô∏è Consider running hygiene fixes before merge.'
            }
            
            <details>
            <summary>Hygiene Factors Analyzed</summary>
            
            - Code organization and structure
            - Import optimization
            - Unused code detection
            - Formatting consistency
            - Documentation completeness
            - Error handling patterns
            
            </details>
            
            Run \`/hygiene\` in comments to re-check or apply fixes.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Upload Hygiene Report
        uses: actions/upload-artifact@v4
        with:
          name: hygiene-report-${{ github.sha }}
          path: hygiene_report.json
          retention-days: 7
          
      - name: Set Check Status
        uses: actions/github-script@v6
        with:
          script: |
            const score = parseInt('${{ steps.hygiene.outputs.hygiene_score }}');
            
            let conclusion = 'success';
            let summary = `Hygiene Score: ${score}/100`;
            
            if (score < 60) {
              conclusion = 'failure';
              summary += ' - Requires improvement';
            } else if (score < 80) {
              conclusion = 'neutral';
              summary += ' - Consider improvements';
            } else {
              summary += ' - Good hygiene';
            }
            
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Code Hygiene Check',
              head_sha: context.sha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'Code Hygiene Analysis',
                summary: summary,
                text: `Automated code hygiene analysis completed with score ${score}/100`
              }
            });