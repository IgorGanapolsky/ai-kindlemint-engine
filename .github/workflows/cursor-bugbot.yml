name: Cursor Bugbot Trigger

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to trigger Bugbot on'
        required: true
        type: number

jobs:
  trigger-bugbot:
    runs-on: ubuntu-latest
    # Only run on PRs from the repo (not forks) for security
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    
    steps:
      - name: Trigger Cursor Bugbot
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.eventName === 'workflow_dispatch' 
              ? parseInt(context.payload.inputs.pr_number)
              : context.payload.pull_request.number;
            
            // Check if bugbot has already been triggered
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              per_page: 100
            });
            
            const hasBugbotComment = comments.data.some(comment => 
              comment.body.includes('bugbot run') && 
              comment.user.login === 'github-actions[bot]'
            );
            
            if (!hasBugbotComment) {
              // Add comment to trigger Bugbot
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: 'ðŸ¤– **Automated Cursor Bugbot Trigger**\n\nbugbot run\n\n*This comment was automatically generated to trigger Cursor Bugbot analysis.*'
              });
              
              console.log(`Triggered Bugbot on PR #${pr_number}`);
            } else {
              console.log(`Bugbot already triggered on PR #${pr_number}`);
            }
            
            // Add a status check (informational only)
            if (context.eventName === 'pull_request') {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: 'pending',
                description: 'Cursor Bugbot analysis requested',
                context: 'Cursor Bugbot'
              });
            }