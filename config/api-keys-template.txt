# API Keys & Credentials Template
# Copy this template and fill in your actual values
# NEVER commit actual credentials to version control

# =============================================================================
# V3 ZERO-TOUCH PUBLISHING ENGINE
# =============================================================================

# OpenAI API (Required)
OPENAI_API_KEY=sk-your-openai-api-key-here

# KDP Account (Required)
KDP_EMAIL=your-kdp-email@example.com
KDP_PASSWORD=your-kdp-password

# Slack Notifications (Required)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# AWS Configuration (Auto-detected)
AWS_REGION=us-east-1
AWS_ACCOUNT_ID=auto-detected

# =============================================================================
# AUTONOMOUS PROMOTION PIPELINE
# =============================================================================

# Buffer Social Media API (Required for social media automation)
# Get these from: https://buffer.com/developers/api
BUFFER_API_KEY=your-buffer-api-key
BUFFER_ACCESS_TOKEN=your-buffer-access-token

# Buffer Profile IDs (Get from Buffer dashboard or API)
# Example: Use Buffer API to list profiles: GET /1/profiles.json
BUFFER_TWITTER_PROFILE_ID=5f2a8b7c9d1e2f3g4h5i6j7k
BUFFER_FACEBOOK_PROFILE_ID=1a2b3c4d5e6f7g8h9i0j1k2l
BUFFER_INSTAGRAM_PROFILE_ID=9z8y7x6w5v4u3t2s1r0q9p8o

# Amazon Advertising API (Required for ad automation)
# Apply at: https://advertising.amazon.com/API
# Note: Approval process can take 1-2 weeks
AMAZON_ADS_CLIENT_ID=amzn1.application-oa2-client.your-client-id
AMAZON_ADS_CLIENT_SECRET=your-amazon-ads-client-secret
AMAZON_ADS_REFRESH_TOKEN=Atzr|your-refresh-token-here
AMAZON_ADS_PROFILE_ID=1234567890123456

# =============================================================================
# HOW TO OBTAIN EACH CREDENTIAL
# =============================================================================

# 1. OPENAI API KEY:
#    - Visit: https://platform.openai.com/api-keys
#    - Create new secret key
#    - Ensure you have GPT-4 access

# 2. KDP CREDENTIALS:
#    - Your Amazon KDP account email and password
#    - Must have active KDP account with books published

# 3. SLACK WEBHOOK:
#    - Visit: https://api.slack.com/messaging/webhooks
#    - Create new webhook for your workspace
#    - Choose channel for notifications

# 4. BUFFER CREDENTIALS:
#    - Create account: https://buffer.com
#    - Connect social media profiles
#    - Visit: https://buffer.com/developers/api
#    - Create new app and get API key/access token
#    - Use API to get profile IDs:
#      curl -X GET 'https://api.bufferapp.com/1/profiles.json?access_token=YOUR_TOKEN'

# 5. AMAZON ADVERTISING API:
#    - Apply: https://advertising.amazon.com/API
#    - Complete application (requires existing advertiser account)
#    - Wait for approval (1-2 weeks typically)
#    - Generate client credentials in console
#    - Complete OAuth flow to get refresh token
#    - Get profile ID from profiles endpoint

# =============================================================================
# DEPLOYMENT COMMANDS
# =============================================================================

# Export all variables before deployment:
# export OPENAI_API_KEY="sk-your-key"
# export KDP_EMAIL="your-email"
# export KDP_PASSWORD="your-password"
# export SLACK_WEBHOOK_URL="your-webhook"
# export BUFFER_API_KEY="your-buffer-key"
# export BUFFER_ACCESS_TOKEN="your-buffer-token"
# export BUFFER_TWITTER_PROFILE_ID="your-twitter-id"
# export AMAZON_ADS_CLIENT_ID="your-ads-client-id"
# export AMAZON_ADS_CLIENT_SECRET="your-ads-secret"
# export AMAZON_ADS_REFRESH_TOKEN="your-refresh-token"
# export AMAZON_ADS_PROFILE_ID="your-profile-id"

# Then run:
# ./infrastructure/deploy-v3.sh
# ./infrastructure/deploy-promotion-pipeline.sh

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit real credentials to git
# - Store credentials securely (password manager)
# - Use AWS Secrets Manager in production
# - Rotate credentials regularly
# - Monitor usage and costs
# - Enable MFA on all accounts